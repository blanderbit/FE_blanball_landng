on:
  push:
    branches: ['main']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set env vars
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DOCKERFILE_PATH=Dockerfile" >> $GITHUB_ENV
          echo "ENV_FILE=${{ secrets.ENV_FILE }}" >> $GITHUB_ENV
          echo "REGISTRY=${{ secrets.REGISTRY }}" >> $GITHUB_ENV
          echo "WEBHOOK=${{ secrets.PORTAINER_WEBHOOK_URL }}" >> $GITHUB_ENV
          echo "LATEST_IMAGE=${{ secrets.LANDING_REGISTRY }}":latest >> $GITHUB_ENV
          echo "COMMIT_IMAGE=${{ secrets.LANDING_REGISTRY }}":${{ github.sha }} >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Encode env file
        run: echo ${{ env.ENV_FILE }} | base64 --decode > stack.env
      - name: Pull latest image
        run: |
          docker pull ${LATEST_IMAGE} --ignore-pull-failures || true
      - name: Build image
        working-directory: .
        run: |
          docker build -f ${{ env.DOCKERFILE_PATH }} --cache-from ${{ env.LATEST_IMAGE }} -t ${{ env.COMMIT_IMAGE }}  .
      - name: Tag latest image
        run: |
          docker tag ${{ env.COMMIT_IMAGE }} ${{ env.LATEST_IMAGE }}
      - name: Push images
        run: |
          docker push ${{ env.COMMIT_IMAGE }}
          docker push ${{ env.LATEST_IMAGE }}

      - name: Trigger deploy in portainer
        run: |
          echo "PORTAINER_STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X POST ${{ env.WEBHOOK }})" >> $GITHUB_ENV
      - name: Stop deploy
        if: ${{ env.PORTAINER_STATUS_CODE != 204}}
        uses: saulmaldonado/skip-workflow@v1
        with:
          fail-fast: 'true'